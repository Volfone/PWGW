@page "/projectCreate"

<PageTitle>Profile</PageTitle>

@namespace BlazorControlWork.Data

@inject NavigationManager manager
@inject SingletonServise servise

<p>
    <label>
        Создание проекта
    </label>
</p>
    <div>
    <label> Название проекта: </label>
    <input type="text" class="text-muted mb-0" @bind-value=projectName /><br><br>

    <label class="text-muted mb-0"> Отрасль: @((user as Customer).Department) </label><br><br>

    <label>Select Developer </label>
        <select @bind=developer >
        <option></option>
        @foreach (var i in developers)
        {
            <option value=@i.Login>@i.Login</option>
        }
        </select><br><br>

    <label>Select Planner </label>
    <select @bind=planner >
        <option></option>
        @foreach (var i in planners)
        {
            <option value="@i.Login">@i.Login</option>
        }
    </select><br><br>

    <button type="button" id="btnProf"
                        class="btn btn-success" @onclick=CreateProject>
                    Create project
        </button><br>
    @if (Error)
    {
         <br>
        <div class="alert alert-danger" role="alert">
            @ErrorText
        </div>
    }
    </div>

@code {
    User user;
    string projectName;
    string developer;
    string planner;
    List<User> developers;
    List<User> planners;
    bool Error;
    string ErrorText;

    protected override void OnInitialized()
    {
        developers = Mongo.FindAllDeveloper();
        planners = Mongo.FindAllPlanner();
        user = servise.GetUser();
    }

    private void CreateProject()
    {
        if (developer == null || developer == string.Empty || planner == null || planner == string.Empty
            || projectName == null || projectName == string.Empty)
        {
            Error = true;
            ErrorText = "Введите все данные";
            return;
        }
        Project project = new Project(projectName, (user as Customer).Department, Mongo.Find(developer), Mongo.Find(planner));
        servise.SetProject(project);
        if (project.Type == "Gasification")
        {
            (user as Customer).ProjectGasification.Add(project);
        }
        else
        {
            (user as Customer).ProjectWaterSupply.Add(project);
        }
        var newDeveloper = (Mongo.Find(developer)) as Developer;
        newDeveloper.Projects.Add(project);
        var newPlanner = (Mongo.Find(planner)) as Planner;
        newPlanner.Projects.Add(project);
        Mongo.Replace(user.Login, (user as Customer));
        Mongo.Replace((Mongo.Find(developer)).Login, newDeveloper);
        Mongo.Replace((Mongo.Find(planner)).Login, newPlanner);
        Mongo.AddProjectToDB(project);
        manager.NavigateTo("projectCustomer");
    }
}