@page "/projectCreate"

<PageTitle>Profile</PageTitle>

@namespace BlazorControlWork.Data

@inject NavigationManager Navigation

<p>
    <label>
        Создание проекта
    </label>
</p>
<section style="background-color: #eee;">
    <div>
    <label> Название проекта: </label>
    <input type="text" class="text-muted mb-0" @bind-value=projectName /><br><br>

    <label class="text-muted mb-0"> Отрасль: @((user as Customer).Department) </label><br><br>

    <label>Select Developer </label>
        <select @bind=developer >
        <option></option>
        @foreach (var i in developers)
        {
            <option value=@i.Login>@i.Login</option>
        }
        </select><br><br>

    <label>Select designer </label>
        <select @bind=designer>
        <option></option>
        @foreach (var i in designers)
        {
            <option value="@i.Login">@i.Login</option>
        }
    </select><br><br>

    <button type="button" id="btnProf"
                        class="btn btn-success" @onclick=CreateProject>
                    Create project
        </button><br>
    @if (Error)
    {
         <br>
        <div class="alert alert-danger" role="alert">
            @ErrorText
        </div>
    }
    </div>
</section>

@code {
    User user;
    string projectName;
    string developer;
    string designer;
    List<User> developers;
    List<User> designers;
    bool Error;
    string ErrorText;

    protected override void OnInitialized()
    {
        developers = MongoExamples.FindAllDeveloper();
        designers = MongoExamples.FindAllDesigners();
        user = ActiveUser.user;
    }

    private void CreateProject()
    {
        if (developer == null || developer == string.Empty || designer == null || designer == string.Empty
            || projectName == null || projectName == string.Empty)
        {
            Error = true;
            ErrorText = "Введите все данные";
            return;
        }
        Project project = new Project(projectName, (user as Customer).Department, MongoExamples.Find(developer), MongoExamples.Find(designer));
        ActiveUser.project = project;
        if (project.Type == "Gasification")
        {
            (user as Customer).ProjectGasification.Add(project);
        }
        else
        {
            (user as Customer).ProjectWaterSupply.Add(project);
        }
        var newDeveloper = (MongoExamples.Find(developer)) as Developer;
        newDeveloper.Projects.Add(project);
        var newDesigner = (MongoExamples.Find(designer)) as Designer;
        newDesigner.Projects.Add(project);
        MongoExamples.Replace(user.Login, (user as Customer));
        MongoExamples.Replace(((MongoExamples.Find(developer)) as Developer).Login, newDeveloper);
        MongoExamples.Replace(((MongoExamples.Find(designer)) as Designer).Login, newDesigner);
        MongoExamples.AddProjectToDB(project);
        Navigation.NavigateTo("projectCustomer");
    }
}