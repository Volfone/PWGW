@page "/registration"

<PageTitle>Registration</PageTitle>

@namespace BlazorControlWork.Data
@using System.Text.RegularExpressions;

@inject NavigationManager manager
@inject SingletonServise servise

  <div class="mask d-flex align-items-center h-100 gradient-custom-3">
    <div class="container h-100">
      <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col-12 col-md-9 col-lg-7 col-xl-6">
          <div class="card" style="border-radius: 15px;">
            <div class="card-body p-5">
              <h2 class="text-uppercase text-center mb-5">Create an account</h2>

              <form>
                <div class="form-outline mb-4">
                  <label class="form-label" for="form3Example1cg">Your Login</label>
                  <input type="text" id="form3Example1cg" class="form-control form-control-lg" @bind-value=Login/>
                </div>
                <div class="form-outline mb-4">
                  <label class="form-label" for="form3Example1cg">Your phone number</label>
                  <input type="text" maxlength="11" id="form3Example1cg" class="form-control form-control-lg" @bind-value=PhoneNumber onkeyup="this.value = this.value.replace(/[^0-9]/ig, '')" />
                </div>
                
                <div class="form-outline mb-4">
                  <label class="form-label" for="form3Example3cg">Your Email</label>
                  <input type="email" id="form3Example3cg" class="form-control form-control-lg" @bind-value=Email/>
                </div>

                <div class="form-outline mb-4">
                  <label class="form-label" for="form3Example4cg">Password</label>
                  <input type="password" id="form3Example4cg" class="form-control form-control-lg" @bind-value=Password/>
                </div>

                <div class="form-outline mb-4">
                  <label class="form-label" for="form3Example4cdg">Repeat your password</label>
                  <input type="password" id="form3Example4cdg" class="form-control form-control-lg" @bind-value=RepeatPassword/>
                </div>

                <div class="form-outline mb-4">
                <label class="form-label" for="form3Example4cdg">Your position </label>
                 <select @bind=JobTitle
                     class="form-control">
                    <option value="Customer">Customer</option>
                    <option value="Developer">Developer</option>
                    <option value="Planner">Planner</option>
                  </select>
                </div>
                @if (JobTitle == "Customer")
                {
                    <div class="form-outline mb-4">
                    <label class="form-label" for="form3Example4cdg">Your department </label>
                            <select @bind=Department
                            class="form-control" >
                            <option value="Gasification">Gasification</option>
                            <option value="Water supply">Water supply</option>
                        </select>
                    </div>
                    <br>                
                }
                <div class="d-flex justify-content-center">
                  <button type="button"
                    class="btn btn-success btn-block btn-lg gradient-custom-4 text-body" @onclick=RegistrClick>Register</button>
                </div>
                @if (Error)
                {
                    <br><div class="alert alert-danger" role="alert">
                        @ErrorText
                    </div>
                }
                </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

@code {
    string Login = string.Empty;
    string PhoneNumber = string.Empty;
    string Email = string.Empty;
    string Password = string.Empty;
    string RepeatPassword = string.Empty;
    bool Error = false;
    string ErrorText = string.Empty;
    string JobTitle = string.Empty;
    string Department = string.Empty;


    private void RegistrClick()
    {
        var users = Mongo.FindAll();
        if (!Email.Contains('@'))
        {
            Error = true;
            ErrorText = "Неверная почта";
            return;
        }
        else
        {
            Error = false;
        }
        if (PhoneNumber.Length < 11)
        {
            Error = true;
            ErrorText = "Неверный телефон";
            return;
        }
        foreach(var user in users)
        {
            if (Login == user.Login)
            {
                Error = true;
                ErrorText = "Такой логин уже есть";
                return;
            }
            else{
                Error = false;
            }
        }
        if (Password != RepeatPassword)
        {
            Error = true;
            ErrorText = "Пароль не сходится";
            return;
        }
        else
        {
            Error = false;
        }
        if (Login != "" && (PhoneNumber != "" && PhoneNumber.Length == 11) && Email != "" && Password != "" && RepeatPassword != "" && JobTitle != "")
        {
            User user = null;
            switch (JobTitle)
            {
                case "Customer":
                    user = new Customer(Login, PhoneNumber, Email, Password)
                    {
                        Department = this.Department
                    };
                    break;

                case "Developer":
                    user = new Developer(Login, PhoneNumber, Email, Password);
                    break;

                case "Planner":
                    user = new Planner(Login, PhoneNumber, Email, Password);
                    break;
            }
            Mongo.AddToDB(user);
            servise.SetUser(user);
            manager.NavigateTo("profile");
        }
        else
        {
            Error = true;
            ErrorText = "Заполните все данные";
            return;
        }
    }
}
